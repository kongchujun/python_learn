from fastapi import FastAPI, Request
from starlette.middleware.base import BaseHTTPMiddleware
from fastapi.responses import JSONResponse
import json

app = FastAPI()

class AddInputMiddleware(BaseHTTPMiddleware):
    async def dispatch(self, request: Request, call_next):
        if request.url.path == "/userinput" and request.method == "POST":  # 只针对 /userinput 接口的 POST 请求
            try:
                body = await request.body()
                data = json.loads(body.decode())  # 解码请求体
                new_data = {"input": data}
                request._body = json.dumps(new_data).encode() # 将修改后的数据重新编码并赋值给request._body

                response = await call_next(request)

                return response
            except json.JSONDecodeError:
                return JSONResponse(status_code=400, content={"message": "Invalid JSON"}) # 处理JSON解码错误
        else:
            response = await call_next(request)
            return response

app.add_middleware(AddInputMiddleware)

@app.post("/userinput")
async def userinput(request: Request):
    body = await request.body()
    data = json.loads(body.decode())
    return data


# 运行：uvicorn main:app --reload


if __name__ == '__main__':
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8051)
