import aiohttp
import asyncio
import json
import datetime

async def main():
    url = 'wss://ws-subscriptions-clob.polymarket.com/ws/market'
    last_time_pong = datetime.datetime.now()
    msgs = []

    kamala_trump_yes_token = "112691550711713354714525509796202337193505769808087674259394206524293080902258"
    kamala_trump_no_token = "40934908860656143479579576067633881276941830984503767038689094076378988206631"

    trump_win_election_yes = "21742633143463906290569050155826241533067272736897614950488156847949938836455"
    trump_win_election_no = "48331043336612883890938759509493159234755048973500640148014422747788308965732"

    # 设置代理信息
    proxy = "http://代理服务器地址:代理服务器端口"  # 例如 "http://127.0.0.1:8080"

    async with aiohttp.ClientSession() as session:
        async with session.ws_connect(url, proxy=proxy) as websocket:
            await websocket.send_json({
                "assets_ids": [trump_win_election_yes, trump_win_election_no],
                "type": "market"
            })

            while True:
                msg = await websocket.receive()

                if msg.type == aiohttp.WSMsgType.TEXT:
                    message = msg.data
                    if message != "PONG":
                        last_time_pong = datetime.datetime.now()
                        d = json.loads(message)
                        print(d)
                        msgs.append(d)
                    if last_time_pong + datetime.timedelta(seconds=10) < datetime.datetime.now():
                        await websocket.send_str("PING")
                elif msg.type == aiohttp.WSMsgType.ERROR:
                    print("WebSocket connection closed with error")
                    break
                elif msg.type == aiohttp.WSMsgType.CLOSED:
                    print("WebSocket connection closed")
                    break

# 运行异步主函数
asyncio.run(main())
