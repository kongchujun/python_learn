uvx marimo export html-wasm notebook.py -o docs

#!/bin/bash

# 入参：端口号
BACKEND_PORT=$1

if [ -z "$BACKEND_PORT" ]; then
  echo "用法: $0 <BACKEND_PORT>"
  exit 1
fi

# 查找使用该端口的容器ID
CONTAINER_ID=$(docker ps --filter "publish=$BACKEND_PORT" --format "{{.ID}}")

if [ -z "$CONTAINER_ID" ]; then
  echo "没有发现使用端口 $BACKEND_PORT 的容器"
  exit 0
fi

# 停止并删除容器
echo "发现容器 $CONTAINER_ID 使用端口 $BACKEND_PORT, 正在删除..."
docker stop "$CONTAINER_ID"
docker rm "$CONTAINER_ID"

echo "完成 ✅"


# 1) 设定凭据保存位置（纯文本，注意权限）
git config --global credential.helper 'store --file ~/.git-credentials'
chmod 600 ~/.git-credentials

# 2) 一次性写入（GitHub 示例）
cat >> ~/.git-credentials <<'EOF'
https://<你的GitHub用户名>:<你的PAT>@github.com
EOF你的这一段：

```
[tool.uv.dev-dependencies]
dev = [
  "pre-commit>=4.3.0",
  "ruff>=0.12.8",
  "pre-commit-hooks",
]
```

写法不对。**`dev-dependencies` 在 uv 里不是一个表（table）而是一个数组字段**，应放在 `[tool.uv]` 节点下；或者用标准的可选依赖分组。正确示例二选一：

**方式 A（uv 专用）**

```toml
[tool.uv]
dev-dependencies = [
  "pre-commit>=4.3.0",
  "ruff>=0.12.8",
  "pre-commit-hooks",
]
```

**方式 B（推荐、可移植，PEP 735 分组）**

```toml
[project.optional-dependencies]
dev = [
  "pre-commit>=4.3.0",
  "ruff>=0.12.8",
  "pre-commit-hooks",
]
```

安装命令分别是：

* A：`uv sync --dev`（或 `uv pip install -e . && uv pip install -r dev` 不推荐）
* B：`uv pip install -e .[dev]` 或 `uv sync --group dev`

顺带一提：你上面常规 `dependencies` 里像 `eunomia-mcp--0.3.8` 这样的写法也有问题，应该是 `eunomia-mcp==0.3.8`（双等号而不是双连字符）。
